<?xml version="1.0" encoding="UTF-8"?>
<!-- - DispatcherServlet application context for Application's web tier. -->
<!-- 
	xsi:schemaLocation 설정시 주의사항 
	xsd설정시 반드시 상위 폴더명을 추가로 지정해 주어야 한다. 
	ex)
	http://www.springframework.org/schema/mvc(xsd파일이 들어있는 폴더)
	http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd(실제 xsd)
	
	xsd파일이 들어있는 폴더가 지정되지 않았을 경우 서버 기동시
	cvc-complex-type.2.4.c: 일치하는 와일드 카드 문자가 엄격하게 적용되지만 '~' 요소에 대한 선언을 찾을 수 없습니다. 에러가 발생
 -->
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
						http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context-3.0.xsd
						http://www.springframework.org/schema/mvc
						http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
						">

	<!-- - The controllers are autodetected POJOs labeled with the @Controller annotation. -->
	<context:component-scan base-package="egovframework">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service" />
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Repository" />
	</context:component-scan>
	
	<!--
		Controller호출시 binding 되는 파라메터를 property-editor,converter등을 이용하여 자동으로 형변환 및 formatting을 진행하는 bean 지정
		여기에서 바로 converter나 property-editor 설정을 가진 bean을 지정할 수도 있고 아래 처럼 class를 따로 구성하여 bean을 지정할 수도 있다.
		
		[파라메터가 binding되는 기준]
		html -> Controller 진행시 @ModelAttribute를 이용하여 input의 값을 VO로 자동 mapping
		html 에서 <form:form commandName="vo명"> ~ </form:form>으로 지정한 VO를 Controller 파라메터로 지정
		html -> Controller 진행시 @RequestParam 을 이용하여 파라메터를 가져올때 
	-->
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="webBindingInitializer">
			<bean class="egovframework.example.cmmn.web.EgovBindingInitializer" />
		</property>
	</bean>
	
	<!-- Converter Config -->
	
	<!-- 웹에서는 아래 bean을 설정해 주어야 한다고하는데 지정하지 않아도 동작하는데에는 문제가 없음
	<bean id="webBindingInitializer" class="org.springframework.web.bind.support.ConfigurableWebBindingInitializer">
		<property name="conversionService" ref="conversionService"/>
	</bean>
	-->
	
	<!-- 
		convert 클래스를 지정 set안에 여러개의 converter를 등록할 수 있다.
		converter만 등록시에는 org.springframework.context.support.ConversionServiceFactoryBean을 지정하고
		formatter까지 같이 지정하려면 org.springframework.format.support.FormattingConversionServiceFactoryBean을 지정
		
		사용자 정의 formatter를 이용하려면
		<property name="formatters"></property>에 converters와 동일하게 bean을 지정
	-->
	<bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<property name="converters">
			<set>
				<bean class="egovframework.example.util.MultipartFileToFileVOConverter"/>
			</set>
		</property>
	</bean>
	
	<!-- /Converter Config -->

	<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" />

	<!-- - This bean resolves specific types of exceptions to corresponding logical - view names for error views. The default 
		behaviour of DispatcherServlet - is to propagate all exceptions to the servlet container: this will happen - here with all 
		other types of exceptions. -->
	<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="defaultErrorView" value="cmmn/bizError" />
		<property name="exceptionMappings">
			<props>
				<prop key="org.springframework.dao.DataAccessException">cmmn/dataAccessFailure</prop>
				<prop key="org.springframework.transaction.TransactionException">cmmn/transactionFailure</prop>
				<prop key="egovframework.rte.fdl.cmmn.exception.EgovBizException">cmmn/bizError</prop>
				<prop key="org.springframework.security.AccessDeniedException">cmmn/accessDenied</prop>
			</props>
		</property>
	</bean>

	<!-- - This bean configures the 'prefix' and 'suffix' properties of - InternalResourceViewResolver, which resolves logical 
		view names - returned by Controllers. For example, a logical view name of "vets" - will be mapped to "/WEB-INF/jsp/vets.jsp". -->
	<bean class="org.springframework.web.servlet.view.UrlBasedViewResolver" p:order="1"
		p:viewClass="org.springframework.web.servlet.view.JstlView" p:prefix="/WEB-INF/jsp/egovframework/example/" p:suffix=".jsp" />

	<!-- - Message source for this context, loaded from localized "messages_xx" files. - Could also reside in the root application 
		context, as it is generic, - but is currently just used within Application's web tier. 
		<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource" 
		p:basename="messages"/> -->


	<!-- For Pagination Tag -->
	<bean id="imageRenderer" class="egovframework.example.cmmn.web.EgovImgPaginationRenderer" />

	<bean id="paginationManager" class="egovframework.rte.ptl.mvc.tags.ui.pagination.DefaultPaginationManager">
		<property name="rendererType">
			<map>
				<entry key="image" value-ref="imageRenderer" />
			</map>
		</property>
	</bean>
	<!-- /For Pagination Tag -->
	
	<!-- File Upload -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="100000"/>
		<property name="maxInMemorySize" value="100000"/>
		<property name="defaultEncoding" value="utf-8"/>
	</bean>
	<!-- /File Upload -->
</beans>