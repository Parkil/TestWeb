<?xml version="1.0" encoding="UTF-8"?>

<!--
	servlet 3.0이상부터 web-app에 metadata-complete를 설정할수 있다.
	metadata-complete = "true"인 경우 ServletContainerInitializer 나 web-fragment.xml을 검색하지 않아서 시작속도가 빨라 질수 있다.
	단 ServletContainerInitializer나 web-fragment.xml을 사용할 경우에는 추가하지 말것
	
	web-fragment.xml : servlet 3.0이상 부터 추가된 개념으로 라이브러리 jar파일의 META-INF안에 존재하며 jar파일 로드시 web.xml과 동일하게 작동한다
	단 위의 metadata-complete = "true" 설정시 작동하지 않는다.
-->
<web-app id="WebApp_ID" version="3.0" xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" metadata-complete="true">
	<display-name>TestWeb.TestWeb</display-name>
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>
			org.springframework.web.filter.CharacterEncodingFilter
		</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>utf-8</param-value>
		</init-param>
	</filter>
	
	<filter>
		<filter-name>HTMLTagFilter</filter-name>
		<filter-class>
			egovframework.rte.ptl.mvc.filter.HTMLTagFilter
		</filter-class>
	</filter>
	
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>*.do</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>HTMLTagFilter</filter-name>
		<url-pattern>*.do</url-pattern>
	</filter-mapping>
	
	<!-- spring security 필터 설정 대상지정시 spring security내부에서 *.do가 아닌 기능을 사용하기 때문에 /*이 아닌 .do를 지정하면 안됨  -->
	<filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>
			org.springframework.web.filter.DelegatingFilterProxy
		</filter-class>
	</filter>
	
	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<!-- /spring security 필터 설정 -->
	
	<!-- 
		Root Context, Servlet Context
		
		Root Context
		1.최상단에 위치한 Context
		2.Root Context에서 등록한 Bean은 여러개의 Servlet Context에서 사용할 수 있다
		3.Servlet Context에서 등록한 Bean을 Root Context에서 사용하는것은 불가능하다
		4.Root Context,Servlet Context에 동일한 명칭의 Bean이 있을 경우 Servlet Context Bean이 우선적으로 실행된다.
		
		Servlet Context
		1.Servlet 별로 정의된 Context
		2.servlet-mapping에서 정의된 url이 실행될때만 해당 Context가 실행됨
		
		이와 관련하여 중요한 사실이 있는데 MVC 컴포넌트 등록시 
		@Controller 는 Servlet Context에
		나머지 컴포넌트는 Root Context에 등록을 해야 정상적으로 등록이 됨
		직접 등록이 아닌 scanner를 이용시에는 include-filter,exclude-filter를 이용하여 전체 scan이 되지 않도록 처리하여야 함
	-->
	<!-- Root Context Config -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
				classpath*:egovframework/spring/context-*.xml
		</param-value>
	</context-param>
	
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	
	<!--
		spring security에서 session-management > concurrency-control을 사용하기 위해서 web.xml에서 지정해야함
		이 listener를 선언하지 않으면 session이 invalidate되어도 SessionAuthenticationStrategy(세션 동시성 제어)에서 session이 expired되지 않은것으로 처리되어
		로그아웃한 사용자가 로그인된 것으로 판단하는 문제가 있다.
	-->
	<!--  -->
	<listener>
		<listener-class>
			org.springframework.security.web.session.HttpSessionEventPublisher
		</listener-class>
	</listener>
	
	<!--
		Servlet Context Config
		contextConfigLocation을 미지정시 WEB-INF/[context명]-servlet.xml을 로딩한다.
	-->
	<servlet>
		<servlet-name>action</servlet-name>
		<servlet-class>
			org.springframework.web.servlet.DispatcherServlet
		</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>
				/WEB-INF/config/egovframework/springmvc/dispatcher-servlet.xml,
				/WEB-INF/config/egovframework/springmvc/urlfilename-servlet.xml
			</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>action</servlet-name>
		<url-pattern>*.do</url-pattern>
	</servlet-mapping>
	
	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>
	<login-config>
		<auth-method>BASIC</auth-method>
	</login-config>
	
	<!-- 
	<error-page>
		<exception-type>java.lang.Throwable</exception-type>
		<location>/common/error.jsp</location>
	</error-page>
	<error-page>
		<error-code>404</error-code>
		<location>/common/error.jsp</location>
	</error-page>
	<error-page>
		<error-code>500</error-code>
		<location>/common/error.jsp</location>
	</error-page>
	 -->
</web-app>
